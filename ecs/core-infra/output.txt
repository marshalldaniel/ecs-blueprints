data.aws_caller_identity.current: Reading...
data.aws_availability_zones.available: Reading...
module.ecs.module.cluster.data.aws_iam_policy_document.task_exec_assume[0]: Reading...
module.ecs.module.cluster.data.aws_iam_policy_document.task_exec_assume[0]: Read complete after 0s [id=2291109037]
data.aws_availability_zones.available: Read complete after 0s [id=ap-southeast-2]
data.aws_caller_identity.current: Read complete after 1s [id=546226363458]
module.ecs.module.cluster.data.aws_iam_policy_document.task_exec[0]: Reading...
module.ecs.module.cluster.data.aws_iam_policy_document.task_exec[0]: Read complete after 0s [id=2975485802]

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_service_discovery_private_dns_namespace.this will be created
  + resource "aws_service_discovery_private_dns_namespace" "this" {
      + arn         = (known after apply)
      + description = "Service discovery namespace.clustername.local"
      + hosted_zone = (known after apply)
      + id          = (known after apply)
      + name        = "default.core-infra.local"
      + tags        = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }
      + tags_all    = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }
      + vpc         = (known after apply)
    }

  # module.vpc.aws_default_network_acl.this[0] will be created
  + resource "aws_default_network_acl" "this" {
      + arn                    = (known after apply)
      + default_network_acl_id = (known after apply)
      + id                     = (known after apply)
      + owner_id               = (known after apply)
      + tags                   = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-default"
        }
      + tags_all               = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-default"
        }
      + vpc_id                 = (known after apply)

      + egress {
          + action          = "allow"
          + from_port       = 0
          + ipv6_cidr_block = "::/0"
          + protocol        = "-1"
          + rule_no         = 101
          + to_port         = 0
        }
      + egress {
          + action     = "allow"
          + cidr_block = "0.0.0.0/0"
          + from_port  = 0
          + protocol   = "-1"
          + rule_no    = 100
          + to_port    = 0
        }

      + ingress {
          + action          = "allow"
          + from_port       = 0
          + ipv6_cidr_block = "::/0"
          + protocol        = "-1"
          + rule_no         = 101
          + to_port         = 0
        }
      + ingress {
          + action     = "allow"
          + cidr_block = "0.0.0.0/0"
          + from_port  = 0
          + protocol   = "-1"
          + rule_no    = 100
          + to_port    = 0
        }
    }

  # module.vpc.aws_default_route_table.default[0] will be created
  + resource "aws_default_route_table" "default" {
      + arn                    = (known after apply)
      + default_route_table_id = (known after apply)
      + id                     = (known after apply)
      + owner_id               = (known after apply)
      + route                  = (known after apply)
      + tags                   = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-default"
        }
      + tags_all               = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-default"
        }
      + vpc_id                 = (known after apply)

      + timeouts {
          + create = "5m"
          + update = "5m"
        }
    }

  # module.vpc.aws_default_security_group.this[0] will be created
  + resource "aws_default_security_group" "this" {
      + arn                    = (known after apply)
      + description            = (known after apply)
      + egress                 = (known after apply)
      + id                     = (known after apply)
      + ingress                = (known after apply)
      + name                   = (known after apply)
      + name_prefix            = (known after apply)
      + owner_id               = (known after apply)
      + revoke_rules_on_delete = false
      + tags                   = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-default"
        }
      + tags_all               = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-default"
        }
      + vpc_id                 = (known after apply)
    }

  # module.vpc.aws_eip.nat[0] will be created
  + resource "aws_eip" "nat" {
      + allocation_id        = (known after apply)
      + association_id       = (known after apply)
      + carrier_ip           = (known after apply)
      + customer_owned_ip    = (known after apply)
      + domain               = (known after apply)
      + id                   = (known after apply)
      + instance             = (known after apply)
      + network_border_group = (known after apply)
      + network_interface    = (known after apply)
      + private_dns          = (known after apply)
      + private_ip           = (known after apply)
      + public_dns           = (known after apply)
      + public_ip            = (known after apply)
      + public_ipv4_pool     = (known after apply)
      + tags                 = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-ap-southeast-2a"
        }
      + tags_all             = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-ap-southeast-2a"
        }
      + vpc                  = true
    }

  # module.vpc.aws_internet_gateway.this[0] will be created
  + resource "aws_internet_gateway" "this" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + owner_id = (known after apply)
      + tags     = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra"
        }
      + tags_all = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra"
        }
      + vpc_id   = (known after apply)
    }

  # module.vpc.aws_nat_gateway.this[0] will be created
  + resource "aws_nat_gateway" "this" {
      + allocation_id        = (known after apply)
      + association_id       = (known after apply)
      + connectivity_type    = "public"
      + id                   = (known after apply)
      + network_interface_id = (known after apply)
      + private_ip           = (known after apply)
      + public_ip            = (known after apply)
      + subnet_id            = (known after apply)
      + tags                 = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-ap-southeast-2a"
        }
      + tags_all             = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-ap-southeast-2a"
        }
    }

  # module.vpc.aws_route.private_nat_gateway[0] will be created
  + resource "aws_route" "private_nat_gateway" {
      + destination_cidr_block = "0.0.0.0/0"
      + id                     = (known after apply)
      + instance_id            = (known after apply)
      + instance_owner_id      = (known after apply)
      + nat_gateway_id         = (known after apply)
      + network_interface_id   = (known after apply)
      + origin                 = (known after apply)
      + route_table_id         = (known after apply)
      + state                  = (known after apply)

      + timeouts {
          + create = "5m"
        }
    }

  # module.vpc.aws_route.public_internet_gateway[0] will be created
  + resource "aws_route" "public_internet_gateway" {
      + destination_cidr_block = "0.0.0.0/0"
      + gateway_id             = (known after apply)
      + id                     = (known after apply)
      + instance_id            = (known after apply)
      + instance_owner_id      = (known after apply)
      + network_interface_id   = (known after apply)
      + origin                 = (known after apply)
      + route_table_id         = (known after apply)
      + state                  = (known after apply)

      + timeouts {
          + create = "5m"
        }
    }

  # module.vpc.aws_route_table.private[0] will be created
  + resource "aws_route_table" "private" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = (known after apply)
      + tags             = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-private"
        }
      + tags_all         = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-private"
        }
      + vpc_id           = (known after apply)
    }

  # module.vpc.aws_route_table.public[0] will be created
  + resource "aws_route_table" "public" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = (known after apply)
      + tags             = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-public"
        }
      + tags_all         = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-public"
        }
      + vpc_id           = (known after apply)
    }

  # module.vpc.aws_route_table_association.private[0] will be created
  + resource "aws_route_table_association" "private" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.aws_route_table_association.private[1] will be created
  + resource "aws_route_table_association" "private" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.aws_route_table_association.private[2] will be created
  + resource "aws_route_table_association" "private" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.aws_route_table_association.public[0] will be created
  + resource "aws_route_table_association" "public" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.aws_route_table_association.public[1] will be created
  + resource "aws_route_table_association" "public" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.aws_route_table_association.public[2] will be created
  + resource "aws_route_table_association" "public" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.aws_subnet.private[0] will be created
  + resource "aws_subnet" "private" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "ap-southeast-2a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.10.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-private-ap-southeast-2a"
        }
      + tags_all                                       = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-private-ap-southeast-2a"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.aws_subnet.private[1] will be created
  + resource "aws_subnet" "private" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "ap-southeast-2b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.11.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-private-ap-southeast-2b"
        }
      + tags_all                                       = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-private-ap-southeast-2b"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.aws_subnet.private[2] will be created
  + resource "aws_subnet" "private" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "ap-southeast-2c"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.12.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-private-ap-southeast-2c"
        }
      + tags_all                                       = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-private-ap-southeast-2c"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.aws_subnet.public[0] will be created
  + resource "aws_subnet" "public" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "ap-southeast-2a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.0.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = true
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-public-ap-southeast-2a"
        }
      + tags_all                                       = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-public-ap-southeast-2a"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.aws_subnet.public[1] will be created
  + resource "aws_subnet" "public" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "ap-southeast-2b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.1.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = true
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-public-ap-southeast-2b"
        }
      + tags_all                                       = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-public-ap-southeast-2b"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.aws_subnet.public[2] will be created
  + resource "aws_subnet" "public" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "ap-southeast-2c"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.2.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = true
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-public-ap-southeast-2c"
        }
      + tags_all                                       = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-public-ap-southeast-2c"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.aws_vpc.this[0] will be created
  + resource "aws_vpc" "this" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = true
      + enable_dns_support                   = true
      + enable_network_address_usage_metrics = (known after apply)
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags                                 = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra"
        }
      + tags_all                             = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra"
        }
    }

  # module.ecs.module.cluster.aws_cloudwatch_log_group.this[0] will be created
  + resource "aws_cloudwatch_log_group" "this" {
      + arn               = (known after apply)
      + id                = (known after apply)
      + name              = "/aws/ecs/core-infra"
      + name_prefix       = (known after apply)
      + retention_in_days = 90
      + skip_destroy      = false
      + tags              = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }
      + tags_all          = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }
    }

  # module.ecs.module.cluster.aws_ecs_cluster.this[0] will be created
  + resource "aws_ecs_cluster" "this" {
      + arn                = (known after apply)
      + capacity_providers = (known after apply)
      + id                 = (known after apply)
      + name               = "core-infra"
      + tags               = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }
      + tags_all           = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }

      + configuration {
          + execute_command_configuration {
              + logging = "DEFAULT"
            }
        }

      + service_connect_defaults {
          + namespace = (known after apply)
        }

      + setting {
          + name  = "containerInsights"
          + value = "enabled"
        }
    }

  # module.ecs.module.cluster.aws_ecs_cluster_capacity_providers.this[0] will be created
  + resource "aws_ecs_cluster_capacity_providers" "this" {
      + capacity_providers = [
          + "FARGATE",
          + "FARGATE_SPOT",
        ]
      + cluster_name       = "core-infra"
      + id                 = (known after apply)

      + default_capacity_provider_strategy {
          + base              = 0
          + capacity_provider = "FARGATE"
          + weight            = 0
        }
      + default_capacity_provider_strategy {
          + base              = 0
          + capacity_provider = "FARGATE_SPOT"
          + weight            = 0
        }
    }

  # module.ecs.module.cluster.aws_iam_policy.task_exec[0] will be created
  + resource "aws_iam_policy" "task_exec" {
      + arn         = (known after apply)
      + description = "Task execution role IAM policy"
      + id          = (known after apply)
      + name        = (known after apply)
      + name_prefix = "core-infra-"
      + path        = "/"
      + policy      = jsonencode(
            {
              + Statement = [
                  + {
                      + Action   = [
                          + "logs:PutLogEvents",
                          + "logs:CreateLogStream",
                        ]
                      + Effect   = "Allow"
                      + Resource = "*"
                      + Sid      = "Logs"
                    },
                  + {
                      + Action   = [
                          + "ecr:GetDownloadUrlForLayer",
                          + "ecr:GetAuthorizationToken",
                          + "ecr:BatchGetImage",
                          + "ecr:BatchCheckLayerAvailability",
                        ]
                      + Effect   = "Allow"
                      + Resource = "*"
                      + Sid      = "ECR"
                    },
                  + {
                      + Action   = "ssm:GetParameters"
                      + Effect   = "Allow"
                      + Resource = "arn:aws:ssm:ap-southeast-2:546226363458:parameter/*"
                      + Sid      = "GetSSMParams"
                    },
                  + {
                      + Action   = "secretsmanager:GetSecretValue"
                      + Effect   = "Allow"
                      + Resource = "arn:aws:secretsmanager:ap-southeast-2:546226363458:secret:*"
                      + Sid      = "GetSecrets"
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + policy_id   = (known after apply)
      + tags        = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }
      + tags_all    = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }
    }

  # module.ecs.module.cluster.aws_iam_role.task_exec[0] will be created
  + resource "aws_iam_role" "task_exec" {
      + arn                   = (known after apply)
      + assume_role_policy    = jsonencode(
            {
              + Statement = [
                  + {
                      + Action    = "sts:AssumeRole"
                      + Effect    = "Allow"
                      + Principal = {
                          + Service = "ecs-tasks.amazonaws.com"
                        }
                      + Sid       = "ECSTaskExecutionAssumeRole"
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + create_date           = (known after apply)
      + description           = "Task execution role for core-infra"
      + force_detach_policies = true
      + id                    = (known after apply)
      + managed_policy_arns   = (known after apply)
      + max_session_duration  = 3600
      + name                  = (known after apply)
      + name_prefix           = "core-infra-"
      + path                  = "/"
      + role_last_used        = (known after apply)
      + tags                  = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }
      + tags_all              = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }
      + unique_id             = (known after apply)
    }

  # module.ecs.module.cluster.aws_iam_role_policy_attachment.task_exec[0] will be created
  + resource "aws_iam_role_policy_attachment" "task_exec" {
      + id         = (known after apply)
      + policy_arn = (known after apply)
      + role       = (known after apply)
    }

Plan: 30 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + ecs_cluster_id               = (known after apply)
  + ecs_cluster_name             = "core-infra"
  + ecs_task_execution_role_arn  = (known after apply)
  + ecs_task_execution_role_name = (known after apply)
  + private_subnets              = [
      + (known after apply),
      + (known after apply),
      + (known after apply),
    ]
  + private_subnets_cidr_blocks  = [
      + "10.0.10.0/24",
      + "10.0.11.0/24",
      + "10.0.12.0/24",
    ]
  + public_subnets               = [
      + (known after apply),
      + (known after apply),
      + (known after apply),
    ]
  + service_discovery_namespaces = {
      + arn         = (known after apply)
      + description = "Service discovery namespace.clustername.local"
      + hosted_zone = (known after apply)
      + id          = (known after apply)
      + name        = "default.core-infra.local"
      + tags        = {
          + Blueprint  = "core-infra"
          + GithubRepo = "github.com/aws-ia/ecs-blueprints"
        }
      + tags_all    = {
          + Blueprint  = "core-infra"
          + GithubRepo = "github.com/aws-ia/ecs-blueprints"
        }
      + vpc         = (known after apply)
    }
  + vpc_id                       = (known after apply)

ΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇΓöÇ

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
